// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TakGhahDataLayer.Context;

#nullable disable

namespace TakGhahDataLayer.Migrations
{
    [DbContext(typeof(TakGhahContext))]
    partial class TakGhahContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GhorfeDar.DataLayer.Entities.Articles.Article", b =>
                {
                    b.Property<int>("Article_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Article_ID"));

                    b.Property<string>("ArticleDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArticleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ArticlesCategory_ID")
                        .HasColumnType("int");

                    b.Property<string>("KeyArticle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleArticle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Article_ID");

                    b.HasIndex("ArticlesCategory_ID");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("GhorfeDar.DataLayer.Entities.Articles.ArticleImage", b =>
                {
                    b.Property<int>("ArticleImageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArticleImageID"));

                    b.Property<int>("Article_ID")
                        .HasColumnType("int");

                    b.Property<string>("Images")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArticleImageID");

                    b.HasIndex("Article_ID");

                    b.ToTable("ArticleImages");
                });

            modelBuilder.Entity("GhorfeDar.DataLayer.Entities.Articles.ArticlesCategory", b =>
                {
                    b.Property<int>("ArticlesCategory_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArticlesCategory_ID"));

                    b.Property<string>("ArticlesCategoryDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArticlesCategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageArticlesCategory")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArticlesCategory_ID");

                    b.ToTable("ArticlesCategories");
                });

            modelBuilder.Entity("GhorfeDar.DataLayer.Entities.Users.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<DateTimeOffset?>("BirthDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisterUserDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TakGhahDataLayer.Entites.Users.UserRole", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"));

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("RoleID");

                    b.HasIndex("UserID");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("GhorfeDar.DataLayer.Entities.Articles.Article", b =>
                {
                    b.HasOne("GhorfeDar.DataLayer.Entities.Articles.ArticlesCategory", "ArticlesCategorys")
                        .WithMany("Articles")
                        .HasForeignKey("ArticlesCategory_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArticlesCategorys");
                });

            modelBuilder.Entity("GhorfeDar.DataLayer.Entities.Articles.ArticleImage", b =>
                {
                    b.HasOne("GhorfeDar.DataLayer.Entities.Articles.Article", "Articles")
                        .WithMany("ArticleImages")
                        .HasForeignKey("Article_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articles");
                });

            modelBuilder.Entity("TakGhahDataLayer.Entites.Users.UserRole", b =>
                {
                    b.HasOne("GhorfeDar.DataLayer.Entities.Users.User", "Users")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("GhorfeDar.DataLayer.Entities.Articles.Article", b =>
                {
                    b.Navigation("ArticleImages");
                });

            modelBuilder.Entity("GhorfeDar.DataLayer.Entities.Articles.ArticlesCategory", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("GhorfeDar.DataLayer.Entities.Users.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
